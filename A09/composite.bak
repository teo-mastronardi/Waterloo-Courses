;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname composite) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))

;; (composite f g) consumes a function f and g
;;  and computes f(g(x)) for any given x.

;; composite: (X->X)(X->X) -> X

;; Examples:
(check-expect ((composite abs add1) -5) 4)
(check-expect ((composite sqrt add1) 8) 3)

(define(composite f g)
  (lambda (x)(f(g x))))

;; Tests:
(check-expect ((composite sqr sqr) 2) 16)
(check-expect ((composite list list) 8) (list(list 8)))
(check-expect ((composite first list) 5) 5)


(define (inverse-of-square-list lon)
   (foldr(lambda (f rrr)(cons ((composite sqr identity)(/ 1 f))rrr))
         empty lon))
        
(check-expect (inverse-of-square-list '(1 2 5)) '(1 1/4 1/25))
    